name: CargoTest

on:
  pull_request:
    branches: [ "master", "develop" ]
  push:
    branches: [ "master", "develop" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://datadoggo:datadoggo@localhost:5432/datadoggo
      CARGO_INCREMENTAL: "0"
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: datadoggo
          POSTGRES_USER: datadoggo
          POSTGRES_PASSWORD: datadoggo
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U datadoggo -d datadoggo"
          --health-interval 2s
          --health-timeout 3s
          --health-retries 30
          --tmpfs /var/lib/postgresql/data:rw

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    # 1 つのステップでレジストリ・インデックス・ビルド成果物をまとめてキャッシュ
    - uses: Swatinem/rust-cache@v2
      with:
        # target ディレクトリだけでなく依存 crate 全体もキャッシュ
        cache-all-crates: true

    - name: Cache sqlx-cli binary
      id: cache-sqlx
      uses: actions/cache@v3
      with:
        path: ~/.cargo/bin/sqlx
        key: ${{ runner.os }}-sqlx-cli-v1
 
    - name: Install SQLx CLI
      if: steps.cache-sqlx.outputs.cache-hit != 'true'
      run: cargo install sqlx-cli --no-default-features --features rustls,postgres
 
    - name: Reset database and run migrations
      run: sqlx database reset -y
        
    - name: Run tests
      run: cargo test --verbose
      
    - name: Run clippy
      run: cargo clippy -- -D warnings
      
    - name: Check formatting
      run: cargo fmt -- --check