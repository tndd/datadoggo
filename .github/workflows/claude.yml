name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://datadoggo:datadoggo@localhost:5432/datadoggo
      CARGO_INCREMENTAL: "0"
      CARGO_TERM_COLOR: always
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: datadoggo
          POSTGRES_USER: datadoggo
          POSTGRES_PASSWORD: datadoggo
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U datadoggo -d datadoggo"
          --health-interval 2s
          --health-timeout 3s
          --health-retries 30
          --tmpfs /var/lib/postgresql/data:rw
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true

      - name: Cache sqlx-cli binary
        id: cache-sqlx
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-cli-v1

      - name: Install SQLx CLI
        if: steps.cache-sqlx.outputs.cache-hit != 'true'
        run: cargo install sqlx-cli --no-default-features --features rustls,postgres

      - name: Reset database and run migrations
        run: sqlx database reset -y

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          
          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read

          # Optional: Give a custom prompt to Claude. If this is not specified, Claude will perform the instructions specified in the comment that tagged it.
          # prompt: 'Update the pull request description to include a summary of changes.'

          # Optional: Add claude_args to customize behavior and configuration
          # See https://github.com/anthropics/claude-code-action/blob/main/docs/usage.md
          # or https://docs.anthropic.com/en/docs/claude-code/sdk#command-line for available options
          # claude_args: '--model claude-opus-4-1-20250805 --allowed-tools Bash(gh pr:*)'

